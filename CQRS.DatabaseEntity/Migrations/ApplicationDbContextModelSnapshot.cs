// <auto-generated />
using CQRS.DatabaseEntity.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CQRS.DatabaseEntity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CQRS.DomainModels.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("CQRS.DomainModels.Models.ProductReseller", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ResellerId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "ResellerId");

                    b.HasIndex("ResellerId");

                    b.ToTable("ProductReseller");
                });

            modelBuilder.Entity("CQRS.DomainModels.Models.Reseller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("SellerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reseller");
                });

            modelBuilder.Entity("CQRS.DomainModels.Models.Volume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SizeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Volume");
                });

            modelBuilder.Entity("CQRS.DomainModels.Models.ProductReseller", b =>
                {
                    b.HasOne("CQRS.DomainModels.Models.Product", "Product")
                        .WithMany("ProductResellers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CQRS.DomainModels.Models.Reseller", "Reseller")
                        .WithMany("ProductResellers")
                        .HasForeignKey("ResellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Reseller");
                });

            modelBuilder.Entity("CQRS.DomainModels.Models.Volume", b =>
                {
                    b.HasOne("CQRS.DomainModels.Models.Product", "Product")
                        .WithMany("Volumes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CQRS.DomainModels.Models.Product", b =>
                {
                    b.Navigation("ProductResellers");

                    b.Navigation("Volumes");
                });

            modelBuilder.Entity("CQRS.DomainModels.Models.Reseller", b =>
                {
                    b.Navigation("ProductResellers");
                });
#pragma warning restore 612, 618
        }
    }
}
